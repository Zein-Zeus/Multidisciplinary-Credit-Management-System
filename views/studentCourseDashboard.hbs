<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="/css/studentCourseDashboard.css"> <!-- Make sure the path is correct -->
</head>

<body>

    <div class="container">
        <nav>
            <div class="logo">
                <a href="/">
                    <img src="/images/logo.png" alt="Logo">
                </a>
            </div>
            <ul>
                <li><a href="/home">Home</a></li>
                <li><a href="/dashboard">Dashboard</a></li>
                <li><a href="/course">Courses</a></li>
            </ul>
            <div class="user-profile">
                <div class="user-initials">{{userInitials}}</div>
            </div>
        </nav>

        <main>

            <div class="course-header">
                <img class="course-image" src="{{course.image}}" alt="Course Image" />
                <div class="course-info">
                    <h1 id="course_name">{{course.courseName}}</h1>
                    <h2 id="college_name">{{course.collegeName}}</h2>
                    <p>Mode: {{course.mode}} | Credits: {{course.credits}} | Duration: {{course.duration}}</p>
                </div>
            </div>

            <div class="course-nav">
                <ul>
                    <li><a href="#about">About</a></li>
                    <li><a href="#modules">Modules</a></li>
                    <li><a href="#studyM">Study Material</a></li>
                    <li><a href="#assignment">Assignment</a></li>
                    <li><a href="#contact">Contact</a></li>
                </ul>
            </div>

            <div class="course-section">
                <h3 id="about">About</h3>
                <p>{{course.courseDescription}}</p>

                <h3 id="modules">Modules</h3>
                <p>{{course.courseModules}}</p>

                <h3 id="studyM">Study Material</h3>
                <p>{{#if course.studyMaterial}}Uploaded{{else}}Not Uploaded Yet{{/if}}</p>

                <h3 id="assignment">Assignments</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Topic</th>
                            <th>Description</th>
                            <th>Max. Marks</th>
                            <th>Posted</th>
                            <th>Due</th>
                            <th>File</th>
                            <th>Upload</th>
                            <th>View</th>
                            <th>Action</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each assignmentDetails}}
                        <tr>
                            <td>{{name}}</td>
                            <td>{{topic}}</td>
                            <td>{{description}}</td>
                            <td>{{marks}}</td>
                            <td>{{posted}}</td>
                            <td>{{due}}</td>
                            <td>
                                {{!-- <p>ID: {{assignmentId}}</p> --}}
                                <input type="file" id="fileInput-{{@index}}" style="display: none;" {{#if
                                    submitted}}disabled{{/if}} />
                            </td>
                            <td>
                                {{#if submitted}}
                                {{fileName}}
                                {{else}}
                                <button id="uploadBtn-{{@index}}"
                                    onclick="openFileManager({{@index}}, '{{assignmentId}}')">
                                    Upload
                                </button>
                                {{/if}}
                            </td>
                            <td>
                                {{#if fileUrl}}
                                <button type="button" onclick="viewFileFromUrl('{{fileUrl}}', '{{fileName}}')"
                                    class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-3 rounded">
                                    View
                                </button>
                                {{else}}
                                <button type="button" class="bg-gray-300 text-gray-600 font-bold py-1 px-3 rounded"
                                    disabled>
                                    No file uploaded
                                </button>
                                {{/if}}
                            </td>
                            <td>
                                {{#if submitted}}
                                <button onclick="unsubmitAssignment('{{assignmentId}}')">Unsubmit</button>
                                {{else}}
                                <button id="submitBtn-{{@index}}"
                                    onclick="submitAssignment({{@index}}, '{{assignmentId}}')">Submit</button>
                                {{/if}}
                            </td>
                            <td>
                                <span id="status-{{@index}}">
                                    {{#if submitted}}Uploaded{{else}}Pending{{/if}}
                                </span>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>

                <h3 id="contact">Contact</h3>
                <p>Faculty: {{course.facultyName}}</p>
            </div>


        </main>

    </div>

    <script>
        const uploadedFiles = [];

        function openFileManager(index) {
            const fileInput = document.getElementById(`fileInput-${index}`);
            if (!uploadedFiles[index]) {
                fileInput.click();
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const fileInputs = document.querySelectorAll("input[type='file']");
            fileInputs.forEach((input, index) => {
                input.addEventListener("change", (e) => {
                    const file = e.target.files[0];
                    if (file) {
                        const allowedTypes = ['application/pdf'];
                        if (!allowedTypes.includes(file.type)) {
                            alert("File format not supported. Only PDF files can be uploaded.");
                            input.value = "";
                            return;
                        }

                        uploadedFiles[index] = file;
                        alert(`File "${file.name}" uploaded for assignment ${index + 1}`);

                        const uploadBtn = document.getElementById(`uploadBtn-${index}`);
                        const cell = uploadBtn.parentElement;
                        cell.innerHTML = `<span class="file-name">${file.name}</span>`;
                    }
                });
            });
        });

        function viewFileFromUrl(fileUrl, fileName) {
            const previewTypes = ['pdf']; // Add other extensions if needed

            const extension = fileUrl.split('.').pop().toLowerCase();
            if (previewTypes.includes(extension)) {
                const popup = window.open("", "_blank", "width=800,height=600,scrollbars=yes,resizable=yes");
                popup.document.write(`
            <html>
                <head>
                    <title>View File - ${fileName}</title>
                </head>
                <body style="margin:0">
                    <embed src="${fileUrl}" type="application/pdf" width="100%" height="100%" />
                </body>
            </html>
        `);
                popup.document.close();
            } else {
                alert("Preview not supported for this file type.");
            }
        }

        function submitAssignment(index, assignmentIdRaw) {
            const assignmentId = assignmentIdRaw.trim();
            console.log("Cleaned assignmentId:", assignmentId);

            const fileInput = document.getElementById(`fileInput-${index}`);
            const file = fileInput.files[0];

            if (!file) {
                alert("Please select a file first by clicking Upload.");
                return;
            }

            const formData = new FormData();
            formData.append('assignmentFile', file);
            formData.append('assignmentId', assignmentId);

            fetch('/student-upload-assignment', {
                method: 'POST',
                body: formData
            })
                .then(res => res.json())
                .then(data => {
                    alert(data.message);

                    // Disable the submit button
                    const submitButton = document.getElementById(`submitButton-${index}`);
                    if (submitButton) {
                        submitButton.disabled = true;
                        submitButton.textContent = "Submitted";
                        submitButton.classList.add("submitted"); // optional CSS class
                    }

                    // Change the status text to "Uploaded"
                    const statusElement = document.getElementById(`status-${index}`);
                    if (statusElement) {
                        statusElement.textContent = "Uploaded";
                        statusElement.classList.add("status-uploaded"); // optional CSS class
                    }
                })
                .catch(err => {
                    console.error("Submit error:", err);
                    alert("Something went wrong.");
                });
        }

        function uploadAssignment(index, assignmentId) {
            const input = document.getElementById(`fileInput-${index}`);
            const file = input.files[0];

            if (!file) {
                alert("Please select a file first.");
                return;
            }

            const formData = new FormData();
            formData.append("assignmentFile", file);
            formData.append("assignmentId", assignmentId);

            fetch("/student-upload-assignment", {
                method: "POST",
                body: formData
            }).then(res => res.json())
                .then(data => {
                    alert(data.message);
                    location.reload();
                }).catch(err => {
                    console.error(err);
                    alert("Error uploading assignment.");
                });
        }

        function unsubmitAssignment(assignmentId) {
            fetch('/student-unsubmit-assignment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ assignmentId })
            })
                .then(res => res.json())
                .then(data => {
                    alert(data.message || "Unsubmitted");
                    location.reload(); // Refresh to update UI
                })
                .catch(err => {
                    console.error("Unsubmit failed:", err);
                    alert("Unsubmit error");
                });
        }
    </script>
</body>

</html>